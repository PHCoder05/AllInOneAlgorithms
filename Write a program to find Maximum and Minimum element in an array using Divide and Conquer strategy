#include <iostream>
#include <vector>
#include <utility>
#include <limits.h>

// Function to find maximum and minimum
std::pair<int, int> findMaxMin(const std::vector<int>& arr, int left, int right) {
    // If the array has only one element
    if (left == right) {
        return {arr[left], arr[left]};
    }

    // If the array has two elements
    if (right - left == 1) {
        return {std::max(arr[left], arr[right]), std::min(arr[left], arr[right])};
    }

    // Finding the middle index
    int mid = left + (right - left) / 2;

    // Recursively find max and min in the two halves
    auto leftPair = findMaxMin(arr, left, mid);
    auto rightPair = findMaxMin(arr, mid + 1, right);

    // Return the combined results
    return {std::max(leftPair.first, rightPair.first), std::min(leftPair.second, rightPair.second)};
}

int main() {
    std::vector<int> arr = {3, 5, 1, 8, 2, 7, 6, 4};

    auto [maxVal, minVal] = findMaxMin(arr, 0, arr.size() - 1);
    std::cout << "Maximum value: " << maxVal << std::endl;
    std::cout << "Minimum value: " << minVal << std::endl;

    return 0;
}
